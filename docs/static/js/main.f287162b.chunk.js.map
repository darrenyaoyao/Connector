{"version":3,"sources":["reducers/dialogueNodes.js","reducers/dialogueEdges.js","reducers/currentEdgeIndex.js","reducers/createEdgeMode.js","reducers/createEdgeName.js","reducers/index.js","actions/index.js","components/DialogueController.js","actions/graph2text.js","containers/DialogueController.js","components/DialogueNode.js","components/DialogueEdge.js","components/DialogueManager.js","containers/DialogueManager.js","App.js","serviceWorker.js","index.js"],"names":["dialogueNodes","state","arguments","length","undefined","action","type","nodeType","color","name","nodeName","dialogueNode","group_x","group_y","node_x","node_y","width","height","cornerRadius","fill","name_x","name_y","name_fill","fontSize","inEdges","outEdges","Object","toConsumableArray","concat","newDialogueNodes","index","position","x","y","nodeIndex","push","edgeIndex","JSON","parse","dialogueEdges","stroke","edgeType","edgeName","newEdge","points","strokeWidth","inNode","outNode","newDialogueEdges","currentEdgeIndex","createEdgeMode","mode","createEdgeName","combineReducers","setCreateEdgeMode","pinkTheme","createMuiTheme","palette","primary","pink","lightBlueTheme","lightBlue","lightGreenTheme","lightGreen","DialogueController","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickDialogOpen","setState","open","handleDialogClose","message","createPayload","addNode","setCreateEdgeName","handleTextFieldChange","event","defineProperty","target","value","title","intentSelected","funcOutputSelected","createNode","bind","assertThisInitialized","changeCreateEdgeMode","intentSelectedValue","funcOutputSelectedValue","generateOutput","demo1","edgeMode","console","log","stringify","text","fileName","textBlob","Blob","downloadLink","document","createElement","download","window","webkitURL","href","createObjectURL","URL","onclick","body","removeChild","style","display","appendChild","click","saveTextToFile","nodeList","edgeList","tree2text","headNode","prefix","outputObj","isFirst","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","edge","visitedEdges","indexOf","toAdd","replace","err","return","groups","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","has","set","get","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref","_ref2","slicedToArray","intent","edges","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","graph2text","demo1Edges","demo1Nodes","_this2","classes","react_default","a","className","header","styles","theme","Button_default","variant","button","onClick","ToggleButton_default","selected","Dialog_default","onClose","DialogTitle_default","DialogContent_default","TextField_default","label","textField","onChange","margin","DialogActions_default","autoFocus","Component","withStyles","spacing","unit","zIndex","marginLeft","marginRight","connect","dispatch","modeBool","DialogueNode","cursor","lib","draggable","onDragMove","dragMove","createEdge","onMouseEnter","mouseOver","onMouseLeave","mouseOut","align","verticalAlign","DialogueEdge","offsetY","tension","DialogueManager","onMouseMove","onStageMouseClick","node","Math","floor","currentNodeIndex","currentNode","nodeCenterPosition","setCurrentEdgeIndex","addOutputEdgeToNode","createEdgeType","addEdge","setEdgeInNode","nodeLeftPosition","changeEdgeEndPoints","addInputEdgeToNode","setEdgeOutNode","e","currentTarget","getPosition","changeNodePosition","forEach","changeEdgeStartPoints","evt","offsetX","addEdgePoints","_this3","innerWidth","innerHeight","map","components_DialogueEdge","assign","key","components_DialogueNode","App","containers_DialogueController","containers_DialogueManager","Boolean","location","hostname","match","store","createStore","rootReducer","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f287162b.chunk.js","sourcesContent":["const demo1JSON = '[{\"group_x\":138,\"group_y\":278,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#e91e63\",\"name\":\"start\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"state\",\"inEdges\":[],\"outEdges\":[0]},{\"group_x\":559,\"group_y\":276,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#e91e63\",\"name\":\"user want to listen songs\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"state\",\"inEdges\":[0],\"outEdges\":[1,2]},{\"group_x\":877,\"group_y\":92,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#8bc34a\",\"name\":\"Which song do you want?\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"response\",\"inEdges\":[1],\"outEdges\":[]},{\"group_x\":1152,\"group_y\":274,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#e91e63\",\"name\":\"search songs\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"state\",\"inEdges\":[2],\"outEdges\":[3]},{\"group_x\":1423,\"group_y\":269,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#03a9f4\",\"name\":\"search songs in database\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"function\",\"inEdges\":[3],\"outEdges\":[4,5]},{\"group_x\":1727,\"group_y\":61,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#e91e63\",\"name\":\"play the song\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"state\",\"inEdges\":[4],\"outEdges\":[]},{\"group_x\":1739,\"group_y\":466,\"node_x\":0,\"node_y\":0,\"width\":200,\"height\":100,\"cornerRadius\":20,\"fill\":\"#e91e63\",\"name\":\"ask again\",\"name_x\":20,\"name_y\":15,\"name_fill\":\"white\",\"fontSize\":20,\"type\":\"state\",\"inEdges\":[5],\"outEdges\":[]}]';\n\nconst dialogueNodes = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_NODE':\n      if (action.nodeType === 'STATE') {\n        var color = '#e91e63';\n        var name = action.nodeName;\n        var type = \"state\";\n      } else if (action.nodeType === 'FUNCTION') {\n        var color = '#03a9f4';\n        var name = action.nodeName;\n        var type = \"function\";\n      } else if (action.nodeType === 'RESPONSE') {\n        var color = '#8bc34a';\n        var name = action.nodeName;\n        var type = 'response';\n      }\n      var dialogueNode = {\n        group_x: 50,\n        group_y: 50,\n        node_x: 0,\n        node_y: 0,\n        width: 200,\n        height: 100,\n        cornerRadius: 20,\n        fill: color,\n        name: name,\n        name_x: 20,\n        name_y: 15,\n        name_fill: 'white',\n        fontSize: 20,\n        type: type,\n        inEdges: [],\n        outEdges: []\n      };\n      return [\n        ...state,\n        dialogueNode\n      ];\n    case 'CHANGE_NODE_POSITION':\n      var newDialogueNodes = [...state];\n      newDialogueNodes[action.index].group_x = action.position.x;\n      newDialogueNodes[action.index].group_y = action.position.y;\n      return newDialogueNodes;\n    case 'ADD_OUTPUT_EDGE_TO_NODE':\n      var newDialogueNodes = [...state];\n      newDialogueNodes[action.nodeIndex].outEdges.push(action.edgeIndex);\n      return newDialogueNodes;\n    case 'ADD_INPUT_EDGE_TO_NODE':\n      var newDialogueNodes = [...state];\n      newDialogueNodes[action.nodeIndex].inEdges.push(action.edgeIndex);\n      return newDialogueNodes;\n    case 'DEMO1_NODES':\n      return JSON.parse(demo1JSON);\n    default:\n      return state;\n  }\n}\n\nexport default dialogueNodes\n","const demo1JSON = '[{\"points\":[238,328,559,326],\"name\":\"I want to listen songs\",\"fontSize\":20,\"stroke\":\"black\",\"strokeWidth\":5,\"type\":\"INTENT\",\"inNode\":0,\"outNode\":1},{\"points\":[659,326,877,142],\"name\":\"\",\"fontSize\":20,\"stroke\":\"#E0E0E0\",\"strokeWidth\":5,\"type\":\"FUNCOUTPUT\",\"inNode\":1,\"outNode\":2},{\"points\":[659,326,1152,324],\"name\":\"I want to listen the song: Perfect\",\"fontSize\":20,\"stroke\":\"black\",\"strokeWidth\":5,\"type\":\"INTENT\",\"inNode\":1,\"outNode\":3},{\"points\":[1252,324,1423,319],\"name\":\"\",\"fontSize\":20,\"stroke\":\"#E0E0E0\",\"strokeWidth\":5,\"type\":\"FUNCOUTPUT\",\"inNode\":3,\"outNode\":4},{\"points\":[1523,319,1727,111],\"name\":\"yes\",\"fontSize\":20,\"stroke\":\"#E0E0E0\",\"strokeWidth\":5,\"type\":\"FUNCOUTPUT\",\"inNode\":4,\"outNode\":5},{\"points\":[1523,319,1739,516],\"name\":\"no\",\"fontSize\":20,\"stroke\":\"#E0E0E0\",\"strokeWidth\":5,\"type\":\"FUNCOUTPUT\",\"inNode\":4,\"outNode\":6}]';\n\nconst dialogueEdges = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_EDGE':\n      var stroke = 'black'\n      var name = 'new intent'\n      if (action.edgeType === 'INTENT') {\n        stroke = 'black'\n        name = action.edgeName\n      } else if (action.edgeType === 'FUNCOUTPUT') {\n        stroke = '#E0E0E0'\n        name = action.edgeName\n      }\n      var newEdge = {\n        points: action.points,\n        name: name,\n        fontSize: 20,\n        stroke: stroke,\n        strokeWidth: 5,\n        type: action.edgeType,\n        inNode: -1,\n        outNode: -1\n      }\n      return [\n        ...state,\n        newEdge\n      ]\n    case 'SET_EDGE_IN_NODE':\n      var newDialogueEdges = [...state];\n      newDialogueEdges[action.edgeIndex].inNode = action.nodeIndex;\n      return newDialogueEdges;\n    case 'SET_EDGE_OUT_NODE':\n      var newDialogueEdges = [...state];\n      newDialogueEdges[action.edgeIndex].outNode = action.nodeIndex;\n      return newDialogueEdges;\n    case 'ADD_EDGE_POINTS':\n      var newDialogueEdges = [...state];\n      newDialogueEdges[action.index].points.push(action.points[0]);\n      newDialogueEdges[action.index].points.push(action.points[1]);\n      return newDialogueEdges;\n    case 'CHANGE_EDGE_START_POINTS':\n      var newDialogueEdges = [...state];\n      newDialogueEdges[action.index].points[0] = action.points[0];\n      newDialogueEdges[action.index].points[1] = action.points[1];\n      return newDialogueEdges;\n    case 'CHANGE_EDGE_END_POINTS':\n      var newDialogueEdges = [...state];\n      var length = newDialogueEdges[action.index].points.length;\n      newDialogueEdges[action.index].points[length-2] = action.points[0];\n      newDialogueEdges[action.index].points[length-1] = action.points[1];\n      return newDialogueEdges;\n    case 'DEMO1_EDGES':\n      return JSON.parse(demo1JSON);\n    default:\n      return state;\n  }\n}\n\nexport default dialogueEdges;\n","const currentEdgeIndex = (state = -1, action) => {\n  switch(action.type) {\n    case 'SET_CURRENT_EDGE_INDEX':\n      return action.index\n    default:\n      return state\n  }\n}\n\nexport default currentEdgeIndex\n","const createEdgeMode = (state = 'default', action) => {\n  switch(action.type) {\n    case 'SET_CREATE_EDGE_MODE':\n      return action.mode\n    default:\n      return state\n  }\n}\n\nexport default createEdgeMode\n","const createEdgeName = (state = 'new name', action) => {\n  switch(action.type) {\n    case 'SET_CREATE_EDGE_NAME':\n      return action.name\n    default:\n      return state\n  }\n}\n\nexport default createEdgeName\n","import { combineReducers } from 'redux'\nimport dialogueNodes from './dialogueNodes'\nimport dialogueEdges from './dialogueEdges'\nimport currentEdgeIndex from './currentEdgeIndex'\nimport createEdgeMode from './createEdgeMode'\nimport createEdgeName from './createEdgeName'\n\nexport default combineReducers({\n  dialogueNodes,\n  dialogueEdges,\n  currentEdgeIndex,\n  createEdgeMode,\n  createEdgeName\n})\n","export const addNode = (nodeType, nodeName) => ({\n  type: 'ADD_NODE',\n  nodeType,\n  nodeName\n})\n\nexport const changeNodePosition = (index, position) => ({\n  type: 'CHANGE_NODE_POSITION',\n  index,\n  position\n})\n\nexport const addOutputEdgeToNode = (nodeIndex, edgeIndex) => ({\n  type: 'ADD_OUTPUT_EDGE_TO_NODE',\n  nodeIndex,\n  edgeIndex\n})\n\nexport const addInputEdgeToNode = (nodeIndex, edgeIndex) => ({\n  type: 'ADD_INPUT_EDGE_TO_NODE',\n  nodeIndex,\n  edgeIndex\n})\n\nexport const demo1Nodes = () => ({\n  type: 'DEMO1_NODES'\n})\n\nexport const addEdge = (points, edgeType, edgeName) => ({\n  type: 'ADD_EDGE',\n  points,\n  edgeType,\n  edgeName\n})\n\nexport const setEdgeInNode = (edgeIndex, nodeIndex) => ({\n  type: 'SET_EDGE_IN_NODE',\n  edgeIndex,\n  nodeIndex\n})\n\nexport const setEdgeOutNode = (edgeIndex, nodeIndex) => ({\n  type: 'SET_EDGE_OUT_NODE',\n  edgeIndex,\n  nodeIndex\n})\n\nexport const addEdgePoints = (index, points) => ({\n  type: 'ADD_EDGE_POINTS',\n  index,\n  points\n})\n\nexport const changeEdgeStartPoints = (index, points) => ({\n  type: 'CHANGE_EDGE_START_POINTS',\n  index,\n  points\n})\n\nexport const changeEdgeEndPoints = (index, points) => ({\n  type: 'CHANGE_EDGE_END_POINTS',\n  index,\n  points\n})\n\nexport const demo1Edges = () => ({\n  type: 'DEMO1_EDGES'\n})\n\nexport const setCurrentEdgeIndex = index => ({\n  type: 'SET_CURRENT_EDGE_INDEX',\n  index\n})\n\nexport const setCreateEdgeMode = mode => ({\n  type: 'SET_CREATE_EDGE_MODE',\n  mode\n})\n\nexport const setCreateEdgeName = name => ({\n  type: 'SET_CREATE_EDGE_NAME',\n  name\n})\n","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport pink from '@material-ui/core/colors/pink';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport { graph2text, saveTextToFile } from '../actions/graph2text';\n\nconst pinkTheme = createMuiTheme({\n  palette: {\n    primary: pink,\n  },\n});\n\nconst lightBlueTheme = createMuiTheme({\n  palette: {\n    primary: lightBlue,\n  },\n});\n\nconst lightGreenTheme = createMuiTheme({\n  palette: {\n    primary: lightGreen,\n  },\n});\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  header: {\n    position: 'fixed',\n    zIndex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n})\n\nclass DialogueController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      createPayload: {\n        mode: 'NODE',\n        type: 'STATE'\n      },\n      title: 'STATE',\n      name: 'new name',\n      intentSelected: false,\n      funcOutputSelected: false\n    };\n    this.createNode = this.createNode.bind(this);\n    this.changeCreateEdgeMode = this.changeCreateEdgeMode.bind(this);\n    this.handleClickDialogOpen = this.handleClickDialogOpen.bind(this);\n    this.handleDialogClose = this.handleDialogClose.bind(this);\n    this.intentSelectedValue = this.intentSelectedValue.bind(this);\n    this.funcOutputSelectedValue = this.funcOutputSelectedValue.bind(this);\n    this.generateOutput = this.generateOutput.bind(this);\n    this.demo1 = this.demo1.bind(this);\n  }\n\n  intentSelectedValue() {\n    if (this.props.createEdgeMode === 'INTENT') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  funcOutputSelectedValue() {\n    if (this.props.createEdgeMode === 'FUNCOUTPUT') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  createNode(nodeType) {\n    this.setState({\n      createPayload: {\n        mode: 'NODE',\n        type: nodeType\n      },\n      title: nodeType\n    });\n    this.handleClickDialogOpen();\n  }\n\n  changeCreateEdgeMode(edgeMode) {\n    if (this.props.createEdgeMode !== 'default') {\n      this.props.setCreateEdgeMode('default');\n    } else {\n      this.setState({\n        createPayload: {\n          mode: 'EDGE',\n          type: edgeMode\n        },\n        title: edgeMode\n      });\n      this.handleClickDialogOpen();\n    }\n  }\n\n  handleClickDialogOpen = () => {\n    this.setState({\n      open: true,\n      name: 'new name'\n    });\n  };\n\n  handleDialogClose = (message) => {\n    this.setState({ open: false });\n    if (message === 'CONFIRM') {\n      if (this.state.createPayload.mode === 'NODE') {\n        this.props.addNode(this.state.createPayload.type, this.state.name);\n        this.props.setCreateEdgeMode('default');\n      } else if (this.state.createPayload.mode === 'EDGE') {\n        this.props.setCreateEdgeMode(this.state.createPayload.type);\n        this.props.setCreateEdgeName(this.state.name);\n      }\n    }\n  };\n\n  handleTextFieldChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  generateOutput() {\n    console.log(JSON.stringify(this.props.dialogueNodes))\n    console.log(JSON.stringify(this.props.dialogueEdges))\n    var output = graph2text(this.props.dialogueNodes, this.props.dialogueEdges);\n    saveTextToFile(output, 'dialogue.config');\n  }\n\n  demo1() {\n    this.props.demo1Edges();\n    this.props.demo1Nodes();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.header}>\n        <MuiThemeProvider theme={pinkTheme}>\n          <Button\n            color='primary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => this.createNode('STATE')}>\n            create state\n          </Button>\n        </MuiThemeProvider>\n        <MuiThemeProvider theme={lightBlueTheme}>\n          <Button\n            color='primary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => this.createNode('FUNCTION')}>\n            create function\n          </Button>\n        </MuiThemeProvider>\n        <MuiThemeProvider theme={lightGreenTheme}>\n          <Button\n            color='primary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => this.createNode('RESPONSE')}>\n            create response\n          </Button>\n        </MuiThemeProvider>\n        <ToggleButton\n          className={classes.button}\n          value={0}\n          selected={this.intentSelectedValue()}\n          onClick={() => this.changeCreateEdgeMode('INTENT')}>\n          create intent line\n        </ToggleButton>\n        <ToggleButton\n          className={classes.button}\n          value={0}\n          selected={this.funcOutputSelectedValue()}\n          onClick={() => this.changeCreateEdgeMode('FUNCOUTPUT')}>\n          create function output line\n        </ToggleButton>\n        <Button\n          color='default'\n          variant='contained'\n          className={classes.button}\n          onClick={this.generateOutput}>\n          get output\n        </Button>\n        <Button\n          color='default'\n          variant='contained'\n          className={classes.button}\n          onClick={this.demo1}>\n          Demo1\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleDialogClose}\n        >\n          <DialogTitle>{'Set your ' + this.state.title + ' name'}</DialogTitle>\n          <DialogContent>\n            <TextField\n              label='Name'\n              className={classes.textField}\n              value={this.state.name}\n              onChange={this.handleTextFieldChange('name')}\n              margin='normal'\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleDialogClose('CANCEL')} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => this.handleDialogClose('CONFIRM')} color=\"primary\" autoFocus>\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(DialogueController);\n","function graph2text(nodeList, edgeList, title) {\n    function tree2text(headNode, prefix, outputObj) {\n        prefix += '\\t' + headNode.name;\n        var isFirst = true;\n        for (var index of headNode.outEdges) {\n            var edge = edgeList[index];\n            if (edge.type != 'INTENT' && outputObj.visitedEdges.indexOf(index) < 0) {\n                outputObj.visitedEdges.push(index);\n                var toAdd = isFirst ? prefix : prefix.replace(/[^\\t]+/g, '');\n                isFirst = false;\n                if (edge.name.length > 0) {\n                    toAdd += '\\t' + edge.name;\n                }\n                tree2text(nodeList[edge.outNode], toAdd, outputObj);\n            }\n        }\n        if (isFirst) {\n            // console.log(prefix + '\\n');\n            outputObj.text += prefix + '\\n';\n        }\n    }\n\n    var groups = new Map();\n    for (var edge of edgeList) {\n        if (edge.type == 'INTENT') {\n            if (!groups.has(edge.name)) {\n                groups.set(edge.name, []);\n            }\n            groups.get(edge.name).push(edge);\n        }\n    }\n    title = title || 'begin_scene';\n    var outputObj = {\n        text: title + '\\n',\n        visitedEdges: []\n    };\n    for (var [intent, edges] of groups) {\n        var isFirst = true;\n        for (var edge of edges) {\n            var toAdd = '\\t' + (isFirst? intent : '');\n            isFirst = false;\n            toAdd += '\\t' + nodeList[edge.inNode].name;\n            tree2text(nodeList[edge.outNode], toAdd, outputObj);\n        }\n        // console.log('\\n');\n        outputObj.text += '\\n';\n    }\n    // console.log(outputObj.text);\n    outputObj.text += 'end_of_scene\\n'\n    return outputObj.text;\n}\n\nfunction saveTextToFile(text, fileName) {\n    var textBlob = new Blob([text], {type:'text/plain'});\n    var downloadLink = document.createElement('a');\n    downloadLink.download = fileName;\n    // downloadLink.innerHTML = \"Download File\";\n    if (window.webkitURL != null) {\n        // Chrome allows the link to be clicked\n        // without actually adding it to the DOM.\n        downloadLink.href = window.webkitURL.createObjectURL(textBlob);\n    } else {\n        // Firefox requires the link to be added to the DOM\n        // before it can be clicked.\n        downloadLink.href = window.URL.createObjectURL(textBlob);\n        downloadLink.onclick = function (event) {\n            event = event || window.event;\n            document.body.removeChild(event.target);\n        };\n        downloadLink.style.display = 'none';\n        document.body.appendChild(downloadLink);\n    }\n    downloadLink.click();\n}\n\nexport {graph2text, saveTextToFile}\n","import { connect } from 'react-redux'\nimport { addNode,\n         demo1Nodes,\n         demo1Edges,\n         setCreateEdgeMode,\n         setCreateEdgeName } from '../actions'\nimport DialogueController from '../components/DialogueController'\n\nconst mapStateToProps = state => (state)\n\nconst mapDispatchToProps = dispatch => ({\n  addNode: (nodeType, nodeName) => dispatch(addNode(nodeType, nodeName)),\n  demo1Nodes: () => dispatch(demo1Nodes()),\n  demo1Edges: () => dispatch(demo1Edges()),\n  setCreateEdgeMode: modeBool => dispatch(setCreateEdgeMode(modeBool)),\n  setCreateEdgeName: name => dispatch(setCreateEdgeName(name))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DialogueController)\n","import React, { Component } from 'react';\nimport { Group, Rect, Text } from 'react-konva';\n\nclass DialogueNode extends Component {\n  mouseOver() {\n    document.body.style.cursor = 'pointer';\n  }\n\n  mouseOut() {\n    document.body.style.cursor = 'default';\n  }\n\n  render() {\n    var fontSize = this.props.fontSize;\n    if (this.props.name.length > 25) {\n      fontSize = 15\n    }\n    return (\n      <Group\n        x={this.props.group_x}\n        y={this.props.group_y}\n        draggable={true}\n        onDragMove={this.props.dragMove}\n        onClick={this.props.createEdge}\n        onMouseEnter={this.mouseOver}\n        onMouseLeave={this.mouseOut}>\n        <Rect\n          x={this.props.node_x}\n          y={this.props.node_y}\n          width={this.props.width}\n          height={this.props.height}\n          cornerRadius={this.props.cornerRadius}\n          fill={this.props.fill}\n        />\n        <Text\n          x={this.props.name_x}\n          y={this.props.name_y}\n          width={160}\n          height={70}\n          align={'center'}\n          verticalAlign={'middle'}\n          fill={this.props.name_fill}\n          fontSize={fontSize}\n          text={this.props.name}\n        />\n      </Group>\n    )\n  }\n}\n\nexport default DialogueNode\n","import React, { Component } from 'react';\nimport { Group, Text, Arrow } from 'react-konva';\n\nclass DialogueEdge extends Component {\n  render() {\n    var offsetY = 0;\n    if (this.props.points[1] < this.props.points[3]) {\n      offsetY = -25;\n    } else {\n      offsetY = 5;\n    }\n    var points = [...this.props.points]\n    return (\n      <Group>\n        <Arrow\n          points={points}\n          stroke={this.props.stroke}\n          strokeWidth={this.props.strokeWidth}\n          tension={0}\n        />\n        <Text\n          x={(this.props.points[0]*3+this.props.points[2]*2)/5}\n          y={(this.props.points[1]*3+this.props.points[3]*2)/5+offsetY}\n          fontSize={this.props.fontSize}\n          text={this.props.name}\n        />\n      </Group>\n    )\n  }\n}\n\nexport default DialogueEdge\n","import React, { Component } from 'react';\nimport { Stage, Layer } from 'react-konva';\nimport DialogueNode from './DialogueNode.js';\nimport DialogueEdge from './DialogueEdge.js';\n\nclass DialogueManager extends Component {\n  constructor(props) {\n    super(props);\n    this.dragMove = this.dragMove.bind(this);\n    this.createEdge = this.createEdge.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onStageMouseClick = this.onStageMouseClick.bind(this);\n  }\n\n  nodeCenterPosition(node) {\n    return {\n      x: Math.floor(node.group_x+node.width/2),\n      y: Math.floor(node.group_y+node.height/2)\n    }\n  }\n\n  nodeLeftPosition(node) {\n    return {\n      x: node.group_x,\n      y: Math.floor(node.group_y+node.height/2)\n    }\n  }\n\n  createEdge(index) {\n    var currentNodeIndex = index;\n    if (this.props.createEdgeMode !== 'default') {\n      if (this.props.currentEdgeIndex === -1) {\n        var currentNode = this.props.dialogueNodes[currentNodeIndex]\n        var nodeCenterPosition = this.nodeCenterPosition(currentNode)\n        var points = [\n          nodeCenterPosition.x,\n          nodeCenterPosition.y,\n        ]\n        this.props.setCurrentEdgeIndex(this.props.dialogueEdges.length)\n        this.props.addOutputEdgeToNode(currentNodeIndex, this.props.dialogueEdges.length)\n        var createEdgeType = this.props.createEdgeMode\n        this.props.addEdge(points, createEdgeType, this.props.createEdgeName)\n        this.props.setEdgeInNode(this.props.currentEdgeIndex, currentNodeIndex)\n      } else {\n        var currentNode = this.props.dialogueNodes[currentNodeIndex]\n        var nodeLeftPosition = this.nodeLeftPosition(currentNode)\n        var points = [\n          nodeLeftPosition.x,\n          nodeLeftPosition.y\n        ]\n        this.props.changeEdgeEndPoints(this.props.currentEdgeIndex, points)\n        this.props.addInputEdgeToNode(currentNodeIndex, this.props.currentEdgeIndex)\n        this.props.setEdgeOutNode(this.props.currentEdgeIndex, currentNodeIndex)\n        this.props.setCurrentEdgeIndex(-1)\n        this.props.setCreateEdgeMode('default');\n      }\n    }\n  }\n\n  dragMove(index, e) {\n    var position = e.currentTarget.getPosition();\n    var points = [position.x, position.y]\n    var node = this.props.dialogueNodes[index];\n    this.props.changeNodePosition(index, position);\n    node.inEdges.forEach((edgeIndex) => {\n      var nodeLeftPosition = this.nodeLeftPosition(node)\n      points = [\n        nodeLeftPosition.x,\n        nodeLeftPosition.y\n      ]\n      this.props.changeEdgeEndPoints(edgeIndex, points);\n    })\n    node.outEdges.forEach((edgeIndex) => {\n      var nodeCenterPosition = this.nodeCenterPosition(node)\n      points = [\n        nodeCenterPosition.x,\n        nodeCenterPosition.y,\n      ]\n      this.props.changeEdgeStartPoints(edgeIndex, points);\n    })\n  }\n\n  onMouseMove(e) {\n    if (this.props.createEdgeMode !== 'default' && this.props.currentEdgeIndex !== -1) {\n      var points = [e.evt.offsetX, e.evt.offsetY]\n      this.props.changeEdgeEndPoints(this.props.currentEdgeIndex, points)\n    }\n  }\n\n  onStageMouseClick(e) {\n    if (this.props.createEdgeMode !== 'default' && this.props.currentEdgeIndex !== -1) {\n      var points = [e.evt.offsetX, e.evt.offsetY]\n      this.props.addEdgePoints(this.props.currentEdgeIndex, points)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Stage\n          width={window.innerWidth*4}\n          height={window.innerHeight*4}\n          onMouseMove={this.onMouseMove}\n          onClick={this.onStageMouseClick}>\n          <Layer>\n            {this.props.dialogueEdges.map((edge, index) => (\n              <DialogueEdge\n                key={1000+index}\n                {...edge}\n              />\n            ))}\n            {this.props.dialogueNodes.map((node, index) => (\n              <DialogueNode\n                key={index}\n                {...node}\n                dragMove={(e) => this.dragMove(index, e)}\n                createEdge={(e) => this.createEdge(index)}\n              />\n            ))}\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n\nexport default DialogueManager;\n","import { connect } from 'react-redux'\nimport { changeNodePosition,\n         addOutputEdgeToNode,\n         addInputEdgeToNode,\n         addEdge,\n         setEdgeInNode,\n         setEdgeOutNode,\n         addEdgePoints,\n         changeEdgeStartPoints,\n         changeEdgeEndPoints,\n         setCurrentEdgeIndex,\n         setCreateEdgeMode } from '../actions'\nimport DialogueManager from '../components/DialogueManager'\n\nconst mapStateToProps = state => (state)\n\nconst mapDispatchToProps = dispatch => ({\n  changeNodePosition: (index, position) => dispatch(changeNodePosition(index, position)),\n  addOutputEdgeToNode: (nodeIndex, edgeIndex) => dispatch(addOutputEdgeToNode(nodeIndex, edgeIndex)),\n  addInputEdgeToNode: (nodeIndex, edgeIndex) => dispatch(addInputEdgeToNode(nodeIndex, edgeIndex)),\n  addEdge: (points, edgeType, edgeName) => dispatch(addEdge(points, edgeType, edgeName)),\n  setEdgeInNode: (edgeIndex, nodeIndex) => dispatch(setEdgeInNode(edgeIndex, nodeIndex)),\n  setEdgeOutNode: (edgeIndex, nodeIndex) => dispatch(setEdgeOutNode(edgeIndex, nodeIndex)),\n  addEdgePoints: (index, points) => dispatch(addEdgePoints(index, points)),\n  changeEdgeStartPoints: (index, points) => dispatch(changeEdgeStartPoints(index, points)),\n  changeEdgeEndPoints: (index, points) => dispatch(changeEdgeEndPoints(index, points)),\n  setCurrentEdgeIndex: index => dispatch(setCurrentEdgeIndex(index)),\n  setCreateEdgeMode: modeBool => dispatch(setCreateEdgeMode(modeBool))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DialogueManager)\n","import React from 'react';\nimport DialogueController from './containers/DialogueController'\nimport DialogueManager from './containers/DialogueManager'\n\nconst App = () => (\n  <div>\n    <DialogueController />\n    <DialogueManager />\n  </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}